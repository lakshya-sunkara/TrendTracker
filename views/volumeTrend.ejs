<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8">
  <title>Search Keyword</title>
  <link href="https://fonts.googleapis.com/css2?family=Poppins:wght@300;500&display=swap" rel="stylesheet">
  <style>
    body {
      background: #0f0f0f;
      font-family: 'Poppins', sans-serif;
      color: #fff;
      
      
     
      margin: 0;
      padding-top: 70px; 
    }
  

    .navbar {
  position: fixed;
  top: 0;
  left: 0;
  width: 100%;
  z-index: 999;
  display: flex;
  justify-content: flex-start; 
  align-items: center;
  padding: 1rem 2rem;
  background-color: #141414;
  box-shadow: 0 0 10px #00ffff, 0 0 20px #00ffff;
}

.navbar .brand {
  font-size: 1.7rem;
  font-weight: bold;
  color: #00ffff;
  text-shadow: 0 0 5px #00ffff, 0 0 10px #00ffff, 0 0 20px #00ffff;
  margin-right: 60rem; 
}


    .profile {
      position: relative;
      margin-right: 0rem;
      right: 0;
      cursor: pointer;
    }

    .profile img {
      width: 42px;
      height: 40px;
      border-radius: 99%;
      border: 2px solid #00ffff;
      box-shadow: 0 0 8px #00ffff, 0 0 12px #00ffff;
      transition: transform 0.2s ease-in-out;
    }

    .profile img:hover {
      transform: scale(1.05);
    }

    .dropdown {
      position: absolute;
      top: 55px;
      right: 0;
      background: #1e1e1e;
      border: 1px solid #00ffff;
      border-radius: 12px;
      box-shadow: 0 0 10px #00ffff, 0 0 20px #00ffff;
      width: 320px;
      display: none;
      z-index: 1000;
    }

    .dropdown.show {
      display: block;
    }

    .dropdown .profile-img {
      text-align: center;
      padding: 1rem 1rem 0.5rem;
    }

    .dropdown .profile-img img {
      width: 65px;
      height: 65px;
      border-radius: 50%;
      border: 2px solid #00ffff;
    }

    .dropdown .info {
      padding: 0.5rem 1rem;
    }

    .dropdown .info p {
      margin: 5px 0;
      color: #ccc;
      font-size: 0.9rem;
    }

    .dropdown .actions {
      text-align: center;
      padding: 0.8rem;
    }

    .dropdown .actions a {
      display: block;
      padding: 0.5rem 1rem;
      margin: 0.4rem auto;
      background: #00ffff;
      color: #000;
      border-radius: 5px;
      text-decoration: none;
      font-weight: bold;
      width: 80%;
      box-shadow: 0 0 5px #00ffff, 0 0 10px #00ffff;
      transition: transform 0.2s ease;
    }

    .dropdown .actions a:hover {
      transform: scale(1.05);
    }

    .search-box {
      background: #1c2938;
      padding: 2rem;
      border-radius: 12px;
      text-align: center;
      box-shadow: 0 0 15px #00ffff55;
    }

    .search-box h2 {
      margin-bottom: 20px;
      color: #00ffff;
    }

.sidebar {
  width: 200px;
  height: 100vh;
  position: fixed;
  left: 0;
  top: 10%;
  background: #0a1a3a; /* Dark blue background */
  padding-top: 30px;
  box-shadow: 2px 0 8px rgba(0, 0, 0, 0.3);
}

/* Sidebar menu list */
.sidebar-menu {
  list-style: none;
  padding: 0;
  margin: 0;
}

/* Sidebar items */
.sidebar-menu li {
  margin: 15px 0;
}

.sidebar-menu li a {
  display: flex;
  align-items: center;
  gap: 10px;
  color: #dbeafe; /* Light blue text */
  text-decoration: none;
  font-size: 16px;
  padding: 12px 20px;
  border-radius: 6px;
  transition: all 0.3s ease;
}

/* Hover and active effect */
.sidebar-menu li a:hover {
  background: #1e3a8a; /* Brighter blue */
  color: #fff;
  box-shadow: 0 0 10px rgba(59, 130, 246, 0.8); /* Blue glow */
}

/* Icon styling */
.sidebar-menu li i {
  font-size: 18px;
  color: inherit; /* Inherit color from link */
  transition: transform 0.3s ease;
}

.sidebar-menu li a:hover i {
  transform: scale(1.2); /* Enlarge icon slightly on hover */
}

/* Main content pushes right */
.main-content {
  margin-left: 200px; /* Same as sidebar width */
  padding: 2rem;
  color: #fff;
}

    .search-box input {
      padding: 10px;
      width: 250px;
      border: 2px solid #00ffff;
      border-radius: 8px;
      outline: none;
      margin-bottom: 15px;
      background: transparent;
      color: #fff;
      font-size: 16px;
    }

    .neon-btn {
      padding: 12px 24px;
      font-size: 16px;
      background: transparent;
      color: #00ffff;
      border: 2px solid #00ffff;
      border-radius: 8px;
      cursor: pointer;
      transition: 0.3s;
      text-decoration: none;
    }

    .neon-btn:hover {
      background: #00ffff;
      color: #000;
      box-shadow: 0 0 10px #00ffff, 0 0 20px #00ffff;
    }
  </style>
</head>
<body>
    <div class="navbar">
    <div class="brand">🚀 TrendTracker</div>
    <div class="profile" onclick="toggleDropdown()">
     <img src="<%= user.profileImage && user.profileImage !== '' ? user.profileImage : '/images/default_image.png' %>" alt="Profile">


      <div class="dropdown" id="dropdownMenu">
        <div class="profile-img">
          <img src="<%= user.profileImage && user.profileImage !== '' ? user.profileImage : '/images/default_image.png' %>" alt="Profile">



          <form action="/upload-profile" method="POST" enctype="multipart/form-data" id="uploadForm">
    <label for="fileUpload" class="upload-link">➕Add Photo</label>
    <input type="file" name="profileImage" id="fileUpload" style="display: none;" onchange="document.getElementById('uploadForm').submit();" />
  </form>
        </div>
        <div class="info">
           <p><strong>User ID:</strong> <%= user.userId %></p>
          <p><strong>Name:</strong><%= user.username %></p>
          <p><strong>Email:</strong><%= user.email %></p>
         
        </div>
       <div class="actions">
  
  <button onclick="location.href='/logout'" class="neon-btn"> Logout</button>
</div>
    </div>
    </div>
  </div>
<div class="sidebar">
  <ul class="sidebar-menu">
    <li><a href="/dashboard"><i class="fa fa-home"></i> <span>Home</span></a></li>
    <li><a href="/search"><i class="fa fa-search"></i> <span>Keyword Tracker</span></a></li>
    <li><a href="/trends"><i class="fa fa-chart-line"></i> <span>Volume Trends</span></a></li>
    <li><a href="/sentiment"><i class="fa fa-smile"></i> <span>Sentiment Analysis</span></a></li>
    <li><a href="/posts"><i class="fa fa-database"></i> <span>Trending Posts</span></a></li>
    <li><a href="/reports"><i class="fa fa-file-export"></i> <span>Reports</span></a></li>
  </ul>
</div>


<div class="main-content">
  <h2>Volume & Engagement Trends</h2>

  <% if (keywords.length === 0) { %>
    <div style="margin-top:20px; padding:20px; text-align:center; border:2px dashed #00ffff; border-radius:12px; color:#00ffff;">
      <p style="margin-bottom: 4%;"><%= message || "⚠️ No keywords available. Please add keywords from the Search page." %></p>
      <a href="/search" class="neon-btn">Go to Search</a>
    </div>
  <% } else { %>
    <div id="videosChart" style="width:100%;height:500px;"></div>
    <div id="viewsChart" style="width:100%;height:500px;margin-top:30px;"></div>
    <div id="likesCommentsChart" style="width:100%;height:500px;margin-top:30px;"></div>
    <div id="mapChart" style="width:100%;height:600px;margin-top:30px;"></div>
  <% } %>
</div>




  
</body>
<script src="https://cdn.plot.ly/plotly-2.35.2.min.js"></script>
<script>
  function toggleDropdown() {
    document.getElementById('dropdownMenu').classList.toggle('show');
  }
  window.onclick = function(event) {
    if (!event.target.closest('.profile')) {
      const dropdown = document.getElementById('dropdownMenu');
      if (dropdown && dropdown.classList.contains('show')) {
        dropdown.classList.remove('show');
      }
    }
  }

  // Safely inject keywords data from server
  const keywords = JSON.parse('<%- JSON.stringify(keywords || []) %>');
  console.log("Keywords from server:", keywords);

  const videoTraces = [];
  const viewsTraces = [];
  const likesTraces = [];
  const commentsTraces = [];

  keywords.forEach(k => {
    const dates = k.trendData.map(d => new Date(d.date));
    const videoCount = k.trendData.map(d => d.videoCount);
    const views = k.trendData.map(d => d.totalViews);
    const likes = k.trendData.map(d => d.totalLikes);
    const comments = k.trendData.map(d => d.totalComments);

    // Video count trend
    videoTraces.push({
      x: dates,
      y: videoCount,
      mode: 'lines+markers',
      name: k.keyword,
      type: 'scatter'
    });

    // Views trend
    viewsTraces.push({
      x: dates,
      y: views,
      mode: 'lines+markers',
      name: `${k.keyword} - Views`,
      type: 'scatter'
    });

    // Likes trend
    likesTraces.push({
      x: dates,
      y: likes,
      mode: 'lines+markers',
      name: `${k.keyword} - Likes`,
      type: 'scatter'
    });

    // Comments trend
    commentsTraces.push({
      x: dates,
      y: comments,
      mode: 'lines+markers',
      name: `${k.keyword} - Comments`,
      type: 'scatter'
    });
  });

const iso2ToIso3 = {
      US: "USA", IN: "IND", GB: "GBR", CA: "CAN", AU: "AUS",
      DE: "DEU", FR: "FRA", BR: "BRA", RU: "RUS", JP: "JPN",
      KR: "KOR", IT: "ITA", ES: "ESP", MX: "MEX", ZA: "ZAF",
      NG: "NGA", SA: "SAU", AE: "ARE", SG: "SGP", ID: "IDN"
    };

    // ✅ Aggregate all keyword country stats
    let countryStats = [];
    keywords.forEach(k => { if (k.countryStats) countryStats = countryStats.concat(k.countryStats); });

    const aggregated = {};
    countryStats.forEach(c => { aggregated[c.country] = (aggregated[c.country] || 0) + c.videoCount; });

    const finalStats = Object.entries(aggregated).map(([country, videoCount]) => ({
      country: iso2ToIso3[country] || country,
      videoCount
    }));

    console.log("Country stats for map:", finalStats);

    const mapData = [{
  type: 'choropleth',
  locationmode: 'ISO-3',
  locations: finalStats.map(c => c.country),
  z: finalStats.map(c => c.videoCount),
  text: finalStats.map(c => `${c.country}: ${c.videoCount} videos`),
  colorscale: [
    [0, 'rgb(198, 219, 239)'],   // very light blue for low values
    [0.5, 'rgb(107, 174, 214)'], // medium blue
    [1, 'rgb(8, 48, 107)']       // dark navy blue for highest
  ],
  reversescale: false,
  marker: { line: { color: 'rgb(180,180,180)', width: 0.5 } }
}];

const mapLayout = {
  title: '🌍 Keyword Popularity by Country (Video Count)',
  geo: {
    showframe: false,
    showcoastlines: false,
    projection: { type: 'mercator' }
  },
  width: 1400,   // ✅ increase width
  height: 800,   // ✅ increase height
  paper_bgcolor: '#0f0f0f',
  plot_bgcolor: '#0f0f0f',
  font: { color: '#fff' }
};

P


  // Chart 1: Video Count
  Plotly.newPlot('videosChart', videoTraces, {
    title: '📊 Video Count Over Time',
    xaxis: { title: 'Date' },
    yaxis: { title: 'Video Count' },
    paper_bgcolor: '#0f0f0f',
    plot_bgcolor: '#0f0f0f',
    font: { color: '#fff' }
  });

  // Chart 2: Views
  Plotly.newPlot('viewsChart', viewsTraces, {
    title: '👀 Views Over Time',
    xaxis: { title: 'Date' },
    yaxis: { title: 'Views' },
    paper_bgcolor: '#0f0f0f',
    plot_bgcolor: '#0f0f0f',
    font: { color: '#fff' }
  });

  // Chart 3: Likes + Comments
  Plotly.newPlot('likesCommentsChart', [...likesTraces, ...commentsTraces], {
    title: '👍 Likes & 💬 Comments Over Time',
    xaxis: { title: 'Date' },
    yaxis: { title: 'Count' },
    paper_bgcolor: '#0f0f0f',
    plot_bgcolor: '#0f0f0f',
    font: { color: '#fff' }
  });

   Plotly.newPlot('mapChart', mapData, mapLayout);

</script>


</html>
